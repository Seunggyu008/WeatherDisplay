@using Microsoft.AspNetCore.Identity
@using WeatherDisplay.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Profile" " asp-action = "GetUserProfile" title="UserProfile">안녕하세요, @($"{ user.LastName}")님!</a>
        </li>
     <li class="nav-item">
            <a class="nav-link text-dark" asp-controller ="Profile" asp-action="GetUserProfile">내 프로필</a>
        </li>
    <li class="nav-item">
        <form  class="form-inline" asp-controller="Authentication" asp-action="LogOut" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">로그아웃</button>
        </form>
    </li> 
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Authentication" asp-action="Register">회원가입</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="Authentication" asp-action="Login">로그인</a>
    </li>
}
</ul>
